{
    "openapi": "3.0.0",
    "info": {
        "title": "AdVenture",
        "description": "Back-end API to manage campaigns",
        "contact": {
        "name": "Rafael Ribeiro",
        "url": "https://wophi.be/"
        },
        "version": "1.0.0"
    },

    "paths": {
        "/campaign/create": {
            "post": {
                "summary": "Create campaign",
                "description": "Route to create new campaign.",
                "tags": ["Campaign"],
                "requestBody": {
                    "content": {
                        "application/json": {                    
                            "schema": {
                                "$ref": "#/components/schemas/CreateCampaignDto"
                            },
                            "example": {
                                "name": "VALE25",
                                "category": "PROMOTION",
                                "startDate": "2024-10-01T08:00:00Z",
                                "endDate": "2024-10-15T23:59:00Z"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Campaign created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/CampaignInterface"
                                },
                                "example": {
                                "id": "fca1c783-96d1-49f9-b8cb-89a7dd8af76a",
                                "name": "VALE25",
                                "category": "PROMOTION",
                                "status": "ACTIVE",
                                "startDate": "2024-10-01T08:00:00Z",
                                "endDate": "2024-10-15T23:59:00Z",
                                "createdAt": "2024-10-01T08:00:00.743Z",
                                "updatedAt": "2024-10-01T08:00:00.743Z"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/Error"
                                },

                                "examples": {
                                    "example1": {
                                        "summary": "invalid request body",
                                        "value": {
                                            "error": {
                                                "message": ["One or more fields are missing or invalid"],
                                                "code": "bad.request",
                                                "status": true
                                            },
                                            "data": {}
                                        }
                                    },
                                    "example2": {
                                        "summary": "invalid 'startDate'",
                                        "value": {
                                            "error": {
                                                "message": "Campaign 'startDate' must be at present or future in ISO 8601 format.",
                                                "code": "bad.request",
                                                "status": true
                                            },
                                            "data": {}
                                        }
                                    },
                                    "example3": {
                                        "summary": "invalid 'endDate''",
                                        "value": {
                                            "error": {
                                                "message": "Campaign 'endDate' must be at future in ISO 8601 format.",
                                                "code": "bad.request",
                                                "status": true
                                            },
                                            "data": {}
                                        }
                                    },
                                    "example4": {
                                        "summary": "invalid startDate or endDate campaign",
                                        "value": {
                                            "error": {
                                                "message": "'endDate' must be greater then 'startDate'",
                                                "code": "campaign-service.create",
                                                "status": true
                                            },
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "example1": {
                                        "summary": "'field' already in use",
                                        "value": {
                                            "error": {
                                                "message": "'name' already in use",
                                                "code": "campaign-repository.create",
                                                "status": true
                                            },
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Error"
                            },
            
                            "examples": {
                                "example1": {
                                    "summary": "service unknown error",
                                    "value": {
                                        "error": {
                                            "message": "failed to create campaign",
                                            "code": "campaign-service.create",
                                            "status": true
                                        },
                                        "data": {}
                                    }
                                },
                                "example2": {
                                    "summary": "repository unknown error",
                                    "value": {
                                        "error": {
                                            "message": "campaign not created",
                                            "code": "campaign-repository.create",
                                            "status": true
                                        },
                                        "data": {}
                                    }
                                }
                            }
                        }
                    }
                    }
                }
            }
        },
        "/campaign/{id}": {
            "get": {
                "summary": "Get campaign by id",
                "description": "Route to find campaign by id.",
                "tags": ["Campaign"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                        "type": "string"
                        },
                        "description": "Campaign ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign found",
                        "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignInterface"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                
                                "examples": {
                                    "example1": {
                                        "summary": "service unknown error",
                                        "value": {
                                            "error": {
                                                "message": "could not get campaign",
                                                "code": "campaign-repository.findOne",
                                                "status": true
                                            },
                                            "data": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },

    "components": {
        "schemas": {
            "CreateCampaign": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 200,
                        "description": "Campaign name"
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "PROMOTION",
                            "DISCOUNT",
                            "BRAND_ENGAGEMENT",
                            "CUSTOMER_ACQUISITION",
                            "CUSTOMER_RETENTION",
                            "EVENTS",
                            "SEASONAL",
                            "EDUCATIONAL",
                            "CONTENT_MARKETING",
                            "SOCIAL_RESPONSIBILITY"
                        ],
                        "description": "Campaign category"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Campaign start date and time (ISO 8601 format)"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Campaign end date and time (ISO 8601 format)"
                    }
                }
            },
            "CreateCampaignDto": {
                "allOf": [
                    {"$ref": "#/components/schemas/CreateCampaign"},
                    {
                        "required": [
                            "name",
                            "category",
                            "startDate",
                            "endDate"
                        ]
                    }
                ]
            },
            "CampaignInterface": {
                "allOf": [
                    {"$ref": "#/components/schemas/CreateCampaign"},
                    {
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Campaign ID"
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "ACTIVE",
                                    "PAUSED",
                                    "EXPIRED"
                                ],
                                "description": "Campaign status"
                            },
                            "createdAt": {
                                "type": "string",
                                "description": "Date and time of campaign creation"
                            },
                            "updatedAt": {
                                "type": "string",
                                "description": "Date and time of last campaign update"
                            }
                        }
                    }
                ]
            },

            "Error": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string",
                                "description": "Error message"
                            },
                            "code": {
                                "type": "string",
                                "description": "Error code"
                            },
                            "status": {
                                "type": "boolean",
                                "description": "Error status"
                            }
                        }
                    },
                    "data": {
                        "type": "object",
                        "properties": {}
                    }
                }
            }
        }
    }
}